<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pemrograman Berorientasi Objek</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #000000;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            background-color: #000000;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        h1 {
            color: #ffffff;
            font-size: 2.5em;
            margin: 0 0 10px;
        }
        p {
            color: #faefef;
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Pemrograman Berorientasi Objek</h1>
        <p>Pemrograman Berorientasi Objek (PBO) adalah sebuah paradigma pemrograman yang muncul sebagai respons terhadap keterbatasan pemrograman prosedural dalam menangani kompleksitas perangkat lunak yang semakin berkembang. PBO bertujuan untuk memodelkan program dengan cara yang lebih mendekati dunia nyata, yaitu dengan merepresentasikan komponen-komponen program sebagai objek-objek yang memiliki data dan perilaku.

            Sejarah PBO dapat ditelusuri kembali ke tahun 1960-an dengan pengembangan bahasa pemrograman Simula. Simula, yang dikembangkan oleh Kristen Nygaard dan Ole-Johan Dahl di Norwegia, awalnya dibuat untuk simulasi. Bahasa ini memperkenalkan konsep kelas dan objek, yang menjadi dasar bagi PBO. Kelas adalah blueprint yang mendefinisikan properti dan metode yang dimiliki oleh objek-objek, sementara objek adalah instance spesifik dari kelas tersebut. Simula juga memperkenalkan konsep pewarisan (inheritance), yang memungkinkan objek untuk mewarisi sifat-sifat dari kelas lain.
            
            Pada tahun 1980-an, PBO mulai mendapatkan perhatian yang lebih luas dengan munculnya bahasa pemrograman Smalltalk, yang diciptakan oleh Alan Kay di Xerox PARC. Smalltalk menekankan penggunaan objek sebagai pusat dari semua operasi pemrograman. Bahasa ini lebih mengembangkan konsep yang diperkenalkan oleh Simula, seperti enkapsulasi dan polimorfisme, serta memperkenalkan antarmuka pengguna grafis yang interaktif, yang menjadi inovasi besar pada masanya.
            
            Konsep PBO kemudian diadopsi oleh bahasa pemrograman populer seperti C++, yang diperkenalkan oleh Bjarne Stroustrup pada awal 1980-an. C++ menggabungkan fitur PBO dengan gaya pemrograman prosedural, sehingga lebih fleksibel dan bisa digunakan untuk berbagai jenis aplikasi. C++ menjadi sangat populer di kalangan pengembang perangkat lunak karena kekuatan dan fleksibilitasnya, terutama dalam pengembangan sistem dan aplikasi berbasis grafis.
            
            Pada tahun 1990-an, bahasa pemrograman Java, yang dikembangkan oleh James Gosling di Sun Microsystems, semakin memperkuat dominasi PBO dalam industri perangkat lunak. Java dirancang untuk bersifat portabel dan memiliki pengelolaan memori otomatis melalui garbage collection, sehingga membuatnya lebih mudah digunakan dan diadopsi secara luas, terutama dalam pengembangan aplikasi web dan perangkat seluler.
            
            Dengan semakin kompleksnya aplikasi modern, PBO tetap relevan karena kemampuannya untuk memecah masalah menjadi bagian-bagian yang lebih kecil dan lebih mudah dikelola melalui abstraksi, modularitas, dan penggunaan kembali kode. Hingga kini, PBO digunakan dalam berbagai bahasa pemrograman modern seperti Python, Ruby, dan C#, dan tetap menjadi paradigma dominan dalam pengembangan perangkat lunak.</p>
    </div>
</body>
</html>
